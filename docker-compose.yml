version: '3'
services:
  db:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: pass123

  pgweb:
    restart: always
    image: sosedoff/pgweb
    environment:
      - DATABASE_URL=postgres://postgres:pass123@db:5432/postgres?sslmode=disable
    ports:
      - '8081:8081'

  api:
    image: node:16-buster
    ports:
      - 3002:3000
    working_dir: /app
    environment:
      - DEBUG=1
      - JWT_ACCESS_SECRET=ACCESS_SECRET
      - JWT_REFRESH_SECRET=REFRESH_SECRET
      - JWT_ACCESS_EXPIRE=60m
      - JWT_REFRESH_EXPIRE=30d
      - DB_NAME=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASS=pass123
    volumes:
      - ./backend:/app
    command: bash -c "yarn --dev && yarn start:dev"

  test_frontend:
    image: node:16-buster
    ports:
      - 3004:3004
    working_dir: /app
    environment:
      - WATCHPACK_POLLING=true
      - WDS_SOCKET_PORT=3004
      - PORT=3004
    volumes:
      - ./frontend/test_frontend:/app
    command: bash -c "yarn start"

  nextjs_frontend:
    image: node:16-buster
    ports:
      - 3005:3005
    environment:
      - PORT=3005
    working_dir: /app
    volumes:
      - ./frontend/nextjs_frontend:/app
    command: yarn dev

  proxy:
    build: reverse-proxy
    restart: always
    ports:
      - 80:80
